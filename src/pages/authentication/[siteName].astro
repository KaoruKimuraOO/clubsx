---
/**
 * This page is for when the user clicks from the Firebase email authentication link
 * For Verifying a new account
 */

import Layout from '@layouts/Landing.astro'

const { siteName } = Astro.params
---

<Layout>
  <section class="grid justify-center p-4 md:p-0">
    <section class="my-16 grid gap-8 text-center md:my-32">
      <h1 class="text-2xl font-bold md:text-5xl">Connect Your Account</h1>
      <p>Link your account to your club.</p>
    </section>
    <span
      class="hs-button is-filled animate-pulse rounded border-0 bg-gray-500/60 px-8 py-4 text-inherit"
      >Authenticating...</span
    >
  </section>
  <input id="siteName" type="hidden" value={siteName} disabled />
</Layout>

<script>
  import { instanceStore } from '../../fixtures/firebase/clientInstance'
  import {
    ClubsConfiguration,
    encode,
    setConfig,
  } from '@devprotocol/clubs-core'

  import { defaultConfig } from '@constants/defaultConfig'

  import type { DraftOptions } from '@constants/draft'

  // Confirm the link is a sign-in with email link.
  const auth = instanceStore.initializedApp
  const siteName = (document.getElementById('siteName') as HTMLInputElement)
    ?.value as string

  auth.onIdTokenChanged(async (user) => {
    if (!user) {
      return
    }

    const jwtToken = await user.getIdToken()
    const site: string | undefined =
      window.location.pathname.split('/').pop() || siteName

    const config: ClubsConfiguration = {
      ...defaultConfig,
      name: site,
      options: [
        ...(defaultConfig.options ? defaultConfig.options : []),
        {
          key: '__draft',
          value: {
            isInDraft: true,
            uid: user.uid,
          },
        } as DraftOptions,
      ],
    }

    const body = {
      site,
      config: encode(config),
      uid: user.uid,
    }

    // Save the config to db.
    const res = await fetch('/api/addDaoToDraft', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        Authorization: `Bearer ${jwtToken}`,
      },
      body: JSON.stringify(body),
    })

    if (res.ok) {
      setConfig(config)
      window.location.href = new URL(
        `${siteName}/setup/basic`,
        `${location.protocol}//${location.host}`
      ).toString()
    }
  })
</script>
