---
import type { ExtendedProducts } from '@components/list/cards'
import Cards from '@components/list/cards'
import Hero from '@components/Hero/hero'
import Hero2 from '@components/Hero/hero2'
import type { Products } from '@constants/products'
import type { PriceOverrides } from '@plugins/fiat'

const {
  cm,
  products: _products,
  priceOverrides,
  title,
  hero,
} = Astro.props as {
  cm: {
    projectId: string,
    collectionId: string,
    environment?: string,
  }
  products: Products
  priceOverrides: PriceOverrides
  title?: string
  hero?: {
    coverImgSrc: string
    title: string
    description: string
    avatarImgSrc: string
    projectName: string
  }
}
const products = _products
  .map((prod) => {
    const override = priceOverrides.find((x) => x.id === prod.id)
    return override
      ? {
          ...prod,
          currency: override.currency as any,
          price: override.price,
          purchaseLink: override.purchaseLink,
        }
      : undefined
  })
  .filter((x) => x) as ExtendedProducts
---

<div class="container mx-auto my-16 grid gap-16 px-4">
  {title && <h1 class="font-title text-4xl font-bold">{title}</h1>}
  {
    hero && (
      <>
        <Hero projectName={hero.projectName} coverImgSrc={hero.coverImgSrc} />
        <Hero2
          title={hero.title}
          description={hero.description}
          projectName={hero.projectName}
          avatarImgSrc={hero.avatarImgSrc}
        />
      </>
    )
  }

  <Cards client:load cm={cm} products={[...products]} />

</div>

